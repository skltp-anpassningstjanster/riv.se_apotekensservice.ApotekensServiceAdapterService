pipeline  {
    agent any

    environment {
        JDK_PATH = tool name: 'Java 8_152'
        JAVA_HOME = "${JDK_PATH}"
        MAVEN_DOCKER_IMAGE = 'maven:3.6-jdk-8'
    }
    stages  {
        stage ("Prepare properties and git") {
            steps {
                script {
                    properties ([
                        parameters ([
                            string (
                                name: 'CHECKOUT', 
                                defaultValue: 'release/3.0.0', 
                                description: '''Välj en specifik branch eller commit-hash att checka ut från git. OBS! Lightweight checkout-rutan får inte vara ikryssad om commit-hash används (se Pipeline-steget).''', 
                                trim: true), 
                            string (
                                name: 'CONFIG_FILE_ID', 
                                defaultValue: 'byggReleaseConfig', 
                                description: '', 
                                trim: true), 
                            string (
                                name: 'GIT_USER_NAME', 
                                defaultValue: 'skltp-build', 
                                description: 'Ange användarnamn som ska användas för push till git-repot', 
                                trim: true), 
                            string (
                                name: 'GIT_USER_EMAIL',
                                defaultValue: 'jenkins@ine-dib-build1.in1.sth.basefarm.net', 
                                description: 'Ange epost som ska användas för push till git-repot', 
                                trim: true), 
                            string (
                                name: 'RELEASE_VERSION',
                                description: 'Ange release-version. Lämna tomt för att använda maven-release-plugin:s standardbeteende.',
                                trim: true),
                            string (
                                name: 'DEVELOPMENT_VERSION',
                                description: 'Ange nästa development-version. Lämna tomt för att använda maven-release-plugin:s standardbeteende.',
                                trim: true),
                            booleanParam (
                                name: 'DRY_RUN',
                                description: 'Kryssa i rutan för att undvika att checka in eller modifiera git-repot.',
                                defaultValue: false)
                        ])
                    ])
                }
                sh "git config user.name ${params.GIT_USER_NAME}"
                sh "git config user.email ${params.GIT_USER_EMAIL}"
                git branch: "${params.CHECKOUT}", 
                    changelog: true,
                    credentialsId: 'skltp-github-user', 
                    poll: true,
                    url: 'https://github.com/skltp-anpassningstjanster/riv.se_apotekensservice.ApotekensServiceAdapterService.git'
            }
        }
        stage ('Build') {
            agent {
                docker {
                    image "${MAVEN_DOCKER_IMAGE}"
                    args "-v ${JDK_PATH}:${JDK_PATH}"
                    reuseNode true
                }
            }
            steps {
                withMaven(globalMavenSettingsConfig: 'ae5eda6d-e166-4b43-a78c-ed67ed10cac0', mavenLocalRepo: '.m2repo', mavenSettingsConfig: "${params.CONFIG_FILE_ID}") {
                    sh 'mvn clean install'
                }
            }
        }

        stage ('Results')  {
            steps {
                //junit '**/target/surefire-reports/TEST-*.xml'
                archiveArtifacts '**/target/*.jar'
            }
        }

        stage ('Release')  {
            agent {
                docker {
                    image "${MAVEN_DOCKER_IMAGE}"
                    args "-v ${JDK_PATH}:${JDK_PATH}"
                    reuseNode true
                }
            }      
            steps {
                configFileProvider([configFile(fileId: "${params.CONFIG_FILE_ID}", variable: 'MAVEN_SETTINGS')]) {
                    sh "mvn -B --global-settings ${MAVEN_SETTINGS} -DdevelopmentVersion=${params.DEVELOPMENT_VERSION} -DreleaseVersion=${params.RELEASE_VERSION} -DtagNameFormat=v@{project.version} -Dresume=false -DskipTests -Darguments=-DskipTests -Pskltp -DdryRun=${params.DRY_RUN} release:prepare -DpushChanges=true  release:perform -Darguments=-Dmaven.javadoc.skip=true"
                }
            }
        }
    }

    post  {
        cleanup  {
            cleanWs ()
        }
    }
}
