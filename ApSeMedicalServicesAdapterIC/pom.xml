<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>ApSeMedicalServicesAdapterIC</artifactId>
	<name>${project.artifactId}</name>
	<url>http://maven.apache.org</url>

	<parent>
		<groupId>se.skl.skltpservices.apse</groupId>
		<artifactId>ApSeMedicalServicesAdapter</artifactId>
		<version>1.6.5-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<dependencies>
		<!-- schema dependency -->

		<dependency>
			<groupId>se.skl.skltpservices.apse</groupId>
			<artifactId>ApSeMedicalServicesAdapterIC-Schemas</artifactId>
		</dependency>

		<!-- Pascals TicketMachine -->
		<dependency>
			<groupId>se.inera.pascal.ticket</groupId>
			<artifactId>TicketMachine</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jcl-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- soi toolkit dependencies -->

		<dependency>
			<groupId>org.soitoolkit.commons.components</groupId>
			<artifactId>soitoolkit-commons-mule</artifactId>
		</dependency>
		<dependency>
			<groupId>org.soitoolkit.commons.components</groupId>
			<artifactId>soitoolkit-commons-log</artifactId>
		</dependency>		

		<!-- Mule ESB Transports -->
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-cxf</artifactId>
		</dependency>
		
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>serializer</artifactId>
		</dependency>
		
		<!-- mule -->

		<dependency>
			<groupId>org.mule</groupId>
			<artifactId>mule-core</artifactId>
		</dependency>	
		
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${basedir}/src/main/app</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>${basedir}/src/environment</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
			    <artifactId>maven-resources-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>copy-log4j-resource</id>
			            <phase>prepare-package</phase>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			                <outputDirectory>${project.build.outputDirectory}</outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>src/environment</directory>
			                        <includes>
			                            <include>log4j.xml</include>
			                            <include>log4j.dtd</include>
			                        </includes>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- if no classifier is declared, then a mvn install results in a file 
						in the local repo: ic2-1.0.0-SNAPSHOT.mule which is a jar-file - only strangely 
						named and with a bad extension -->
					<!-- <classifier>core</classifier> -->
					<excludes>
						<exclude>log4j.xml</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>muleServer</id>
			<!-- Start mule server with the command "mvn -PmuleServer" or "mvn -PmuleServer 
				-Dexec.args="${artifaceId}-config.xml"" if you want to override the default 
				config-file -->
			<build>
				<defaultGoal>test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>se.skl.skltpservices.adapter.apse.ApseIntegrationComponentMuleServer</mainClass>
									<classpathScope>test</classpathScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>